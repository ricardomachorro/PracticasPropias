kotlin version: 2.0.21
error message: The daemon has terminated unexpectedly on startup attempt #1 with error code: 0. The daemon process output:
    1. Kotlin compile daemon is ready

error message: Incremental compilation failed: E:\PracticasPropias\Tecnologias\Kotlin\OnBoardingPageDataStore\OnBoardingPageDataStore\app\build\kotlin\compileDebugKotlin\cacheable\caches-jvm\lookups\lookups.tab.keystream: Recursos insuficientes en el sistema para completar el servicio solicitado
java.lang.AssertionError: E:\PracticasPropias\Tecnologias\Kotlin\OnBoardingPageDataStore\OnBoardingPageDataStore\app\build\kotlin\compileDebugKotlin\cacheable\caches-jvm\lookups\lookups.tab.keystream: Recursos insuficientes en el sistema para completar el servicio solicitado
	at org.jetbrains.kotlin.com.intellij.openapi.diagnostic.DefaultLogger.error(DefaultLogger.java:83)
	at org.jetbrains.kotlin.com.intellij.openapi.diagnostic.Logger.error(Logger.java:436)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.catchCorruption(PersistentEnumeratorBase.java:672)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.valueOf(PersistentEnumeratorBase.java:458)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.valueOf(PersistentBTreeEnumerator.java:779)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase$1.process(PersistentEnumeratorBase.java:336)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator$4.process(PersistentBTreeEnumerator.java:413)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.lambda$processMappings$1(IntToIntBtree.java:649)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree$BtreeIndexNodeView.processMappings(IntToIntBtree.java:652)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree.processLeafPages(IntToIntBtree.java:1069)
	at org.jetbrains.kotlin.com.intellij.util.io.IntToIntBtree.processMappings(IntToIntBtree.java:1064)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.traverseAllRecords(PersistentBTreeEnumerator.java:407)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.processAllDataObject(PersistentEnumeratorBase.java:332)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentBTreeEnumerator.processAllDataObject(PersistentBTreeEnumerator.java:374)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.processExistingKeys(PersistentMapImpl.java:590)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.processKeysWithExistingMapping(PersistentHashMap.java:191)
	at org.jetbrains.kotlin.incremental.storage.LazyStorage.getKeys(LazyStorage.kt:67)
	at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.getKeys(InMemoryStorage.kt:50)
	at org.jetbrains.kotlin.incremental.storage.AppendableSetBasicMap.getKeys(BasicMap.kt:126)
	at org.jetbrains.kotlin.incremental.TrackedLookupMap.getKeys(LookupStorage.kt:306)
	at org.jetbrains.kotlin.incremental.LookupStorage.getLookupSymbols(LookupStorage.kt:89)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathSnapshotShrinker.shrinkClasspath$lambda$0(ClasspathSnapshotShrinker.kt:37)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathSnapshotShrinker$MetricsReporter.getLookupSymbols(ClasspathSnapshotShrinker.kt:330)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathSnapshotShrinker.shrinkClasspath(ClasspathSnapshotShrinker.kt:36)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClasspathChanges(ClasspathChangesComputer.kt:50)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompileImpl(IncrementalJvmCompilerRunner.kt:205)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:143)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:225)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.nio.file.FileSystemException: E:\PracticasPropias\Tecnologias\Kotlin\OnBoardingPageDataStore\OnBoardingPageDataStore\app\build\kotlin\compileDebugKotlin\cacheable\caches-jvm\lookups\lookups.tab.keystream: Recursos insuficientes en el sistema para completar el servicio solicitado
	at java.base/sun.nio.fs.WindowsException.translateToIOException(Unknown Source)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(Unknown Source)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(Unknown Source)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newFileChannel(Unknown Source)
	at java.base/java.nio.channels.FileChannel.open(Unknown Source)
	at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.lambda$reopenChannel$0(FileChannelInterruptsRetryer.java:203)
	at org.jetbrains.kotlin.com.intellij.util.ConcurrencyUtil.withLock(ConcurrencyUtil.java:264)
	at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.reopenChannel(FileChannelInterruptsRetryer.java:196)
	at org.jetbrains.kotlin.com.intellij.util.io.FileChannelInterruptsRetryer.<init>(FileChannelInterruptsRetryer.java:93)
	at org.jetbrains.kotlin.com.intellij.util.io.ResilientFileChannel.<init>(ResilientFileChannel.java:62)
	at org.jetbrains.kotlin.com.intellij.util.io.OpenChannelsCache$ChannelDescriptor.lambda$new$0(OpenChannelsCache.java:210)
	at org.jetbrains.kotlin.com.intellij.openapi.util.io.FileUtilRt.doIOOperation(FileUtilRt.java:917)
	at org.jetbrains.kotlin.com.intellij.util.io.OpenChannelsCache$ChannelDescriptor.<init>(OpenChannelsCache.java:208)
	at org.jetbrains.kotlin.com.intellij.util.io.StorageLockContext.executeIdempotentOp(StorageLockContext.java:128)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.executeIdempotentOp(PagedFileStorage.java:145)
	at org.jetbrains.kotlin.com.intellij.util.io.DirectBufferWrapper.allocateAndLoadFileContent(DirectBufferWrapper.java:237)
	at org.jetbrains.kotlin.com.intellij.util.io.DirectBufferWrapper.<init>(DirectBufferWrapper.java:65)
	at org.jetbrains.kotlin.com.intellij.util.io.FilePageCache.allocateAndLoadPage(FilePageCache.java:542)
	at org.jetbrains.kotlin.com.intellij.util.io.FilePageCache.get(FilePageCache.java:238)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.doGetBufferWrapper(PagedFileStorage.java:458)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.getBufferWrapper(PagedFileStorage.java:430)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.getReadOnlyBuffer(PagedFileStorage.java:425)
	at org.jetbrains.kotlin.com.intellij.util.io.PagedFileStorage.get(PagedFileStorage.java:283)
	at org.jetbrains.kotlin.com.intellij.util.io.ResizeableMappedFile.get(ResizeableMappedFile.java:232)
	at org.jetbrains.kotlin.com.intellij.util.io.keyStorage.MappedFileInputStream.read(MappedFileInputStream.java:78)
	at java.base/java.io.BufferedInputStream.fill(Unknown Source)
	at java.base/java.io.BufferedInputStream.implRead(Unknown Source)
	at java.base/java.io.BufferedInputStream.read(Unknown Source)
	at java.base/java.io.DataInputStream.readUnsignedByte(Unknown Source)
	at java.base/java.io.DataInputStream.readByte(Unknown Source)
	at org.jetbrains.kotlin.incremental.storage.LookupSymbolKeyDescriptor.read(externalizers.kt:51)
	at org.jetbrains.kotlin.incremental.storage.LookupSymbolKeyDescriptor.read(externalizers.kt:43)
	at org.jetbrains.kotlin.com.intellij.util.io.keyStorage.AppendableStorageBackedByResizableMappedFile.read(AppendableStorageBackedByResizableMappedFile.java:92)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.findValueFor(PersistentEnumeratorBase.java:470)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.lambda$valueOf$2(PersistentEnumeratorBase.java:459)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentEnumeratorBase.catchCorruption(PersistentEnumeratorBase.java:654)
	... 46 more


